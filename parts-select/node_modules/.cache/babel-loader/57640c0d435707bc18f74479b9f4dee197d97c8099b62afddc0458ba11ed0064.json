{"ast":null,"code":"var _jsxFileName = \"/Users/asfandyarkhan/Desktop/part_select/parts-select/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // New state variable for loading state\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const getAIMessage = async userQuery => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/ai-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: userQuery\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data = await response.json();\n      return {\n        role: 'assistant',\n        content: data\n      };\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      return {\n        role: 'assistant',\n        content: \"Error processing your request.\"\n      };\n    }\n  };\n  const handleSend = async () => {\n    const trimmedInput = input.trim();\n    if (trimmedInput) {\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"user\",\n        content: trimmedInput\n      }]);\n      setInput(\"\");\n      setIsLoading(true); // Set loading state to true before starting AI processing\n\n      try {\n        const response = await getAIMessage(trimmedInput);\n        if (response && response.content) {\n          // Ensure that the response content is being used here\n          setMessages(prevMessages => [...prevMessages, response]);\n        } else {\n          console.error(\"No content in response:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching AI message:\", error);\n      } finally {\n        setIsLoading(false); // Set loading state to false after AI processing is done\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${message.role}-message-container`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}-message`,\n        children: message.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: marked(message.content || '')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this), \"  // Show a loading message when isLoading is true\", /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            handleSend();\n            e.preventDefault();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"jgtQNMlxn2IQY7ClfqeUql7HViM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","marked","jsxDEV","_jsxDEV","ChatWindow","_s","defaultMessage","role","content","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","getAIMessage","userQuery","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","handleSend","trimmedInput","trim","prevMessages","className","children","map","message","index","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","onClick","_c","$RefreshReg$"],"sources":["/Users/asfandyarkhan/Desktop/part_select/parts-select/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);  // New state variable for loading state\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const getAIMessage = async (userQuery) => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/ai-message', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ input: userQuery })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data = await response.json();\n      return { role: 'assistant', content: data }; \n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      return { role: 'assistant', content: \"Error processing your request.\" };\n    }\n  };\n\n  const handleSend = async () => {\n    const trimmedInput = input.trim();\n    if (trimmedInput) {\n      setMessages(prevMessages => [...prevMessages, { role: \"user\", content: trimmedInput }]);\n      setInput(\"\");\n      setIsLoading(true);  // Set loading state to true before starting AI processing\n  \n      try {\n        const response = await getAIMessage(trimmedInput);\n        if (response && response.content) {\n          // Ensure that the response content is being used here\n          setMessages(prevMessages => [...prevMessages, response]);\n        } else {\n          console.error(\"No content in response:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching AI message:\", error);\n      } finally {\n        setIsLoading(false);  // Set loading state to false after AI processing is done\n      }\n    }\n  };\n\n  return (\n    <div className=\"messages-container\">\n      {messages.map((message, index) => (\n        <div key={index} className={`${message.role}-message-container`}>\n          <div className={`message ${message.role}-message`}>\n            {message.content && <div dangerouslySetInnerHTML={{ __html: marked(message.content || '') }}></div>}\n          </div>\n        </div>\n      ))}\n      {isLoading && <div>Loading...</div>}  // Show a loading message when isLoading is true\n      <div ref={messagesEndRef} />\n      <div className=\"input-area\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              handleSend();\n              e.preventDefault();\n            }\n          }}\n        />\n        <button className=\"send-button\" onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
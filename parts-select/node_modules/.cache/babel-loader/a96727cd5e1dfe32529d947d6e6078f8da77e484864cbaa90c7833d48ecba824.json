{"ast":null,"code":"var _jsxFileName = \"/Users/asfandyarkhan/Desktop/part_select/parts-select/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  //const [messages, setMessages] = useState(defaultMessage);\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSend = async () => {\n    const trimmedInput = input.trim();\n    if (trimmedInput) {\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"user\",\n        content: trimmedInput\n      }]);\n      setInput(\"\");\n      try {\n        const response = await getAIMessage(trimmedInput);\n        if (response && response.content) {\n          setMessages(prevMessages => [...prevMessages, {\n            role: 'ai',\n            content: response.content\n          }]);\n        } else {\n          console.error(\"No content in response:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching AI message:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${message.role}-message-container`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}-message`,\n        children: message.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: marked(message.content || '')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            handleSend();\n            e.preventDefault();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"dx5aULH2TcE+2DBqwxF5LBO8474=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","marked","jsxDEV","_jsxDEV","ChatWindow","_s","defaultMessage","role","content","messages","setMessages","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trimmedInput","trim","prevMessages","response","console","error","className","children","map","message","index","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","onClick","_c","$RefreshReg$"],"sources":["/Users/asfandyarkhan/Desktop/part_select/parts-select/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  //const [messages, setMessages] = useState(defaultMessage);\n  const [messages, setMessages] = useState(defaultMessage);\n\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const handleSend = async () => {\n    const trimmedInput = input.trim();\n    if (trimmedInput) {\n      setMessages(prevMessages => [...prevMessages, { role: \"user\", content: trimmedInput }]);\n      setInput(\"\");\n\n      try {\n        const response = await getAIMessage(trimmedInput);\n        if (response && response.content) {\n          setMessages(prevMessages => [...prevMessages, { role: 'ai', content: response.content }]);\n        } else {\n          console.error(\"No content in response:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching AI message:\", error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"messages-container\">\n      {messages.map((message, index) => (\n        <div key={index} className={`${message.role}-message-container`}>\n          <div className={`message ${message.role}-message`}>\n            {message.content && <div dangerouslySetInnerHTML={{ __html: marked(message.content || '') }}></div>}\n          </div>\n        </div>\n      ))}\n      <div ref={messagesEndRef} />\n      <div className=\"input-area\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              handleSend();\n              e.preventDefault();\n            }\n          }}\n        />\n        <button className=\"send-button\" onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}